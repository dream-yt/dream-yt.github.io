<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sacre</title>
    <link>https://dream-yt.github.io/</link>
    <description>Recent content on sacre</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 23 Jan 2019 16:35:58 +0900</lastBuildDate>
    
	<atom:link href="https://dream-yt.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>税抜き5000円で宴会のコースが取れる六本木のお店</title>
      <link>https://dream-yt.github.io/post/roppongi-under5000yen/</link>
      <pubDate>Wed, 23 Jan 2019 16:35:58 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/roppongi-under5000yen/</guid>
      <description>チームメンバーの飲み会、一人頭5000円まで会社の制度で補助してもらえる 六本木にて予算内で飲み会ができてそこそこ人数が入るところのリスト Cafe Rouge</description>
    </item>
    
    <item>
      <title>VLOOKUPの使い方をメモ</title>
      <link>https://dream-yt.github.io/post/spreadsheet-vlookup/</link>
      <pubDate>Wed, 23 Jan 2019 09:40:35 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/spreadsheet-vlookup/</guid>
      <description>自分で使ったことがなかったので勉強 概要 指定した表のなかから条件にマッチした行の、指定したカラムの値を返してくれる VLOOKUP(検索キー, 範</description>
    </item>
    
    <item>
      <title>There is no document formatter for &#39;sql&#39;-files installed</title>
      <link>https://dream-yt.github.io/post/vscode-sql-formatter-stun/</link>
      <pubDate>Tue, 22 Jan 2019 12:52:05 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/vscode-sql-formatter-stun/</guid>
      <description>vscodeを使っている。SQLファイルは保存時にフォーマットされるようしているが、 ある日突然保存時フォーマットが聞かなくなった vscode</description>
    </item>
    
    <item>
      <title>ALBの直近1時間のリクエスト数をawscliで取得する</title>
      <link>https://dream-yt.github.io/post/alb-request-count-by-awscli/</link>
      <pubDate>Sun, 20 Jan 2019 15:05:24 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/alb-request-count-by-awscli/</guid>
      <description>以下のコマンドで取得できる aws cloudwatch --profile mossan get-metric-statistics \ --namespace &#39;AWS/ApplicationELB&#39; \ --metric-name &#39;RequestCount&#39; \ --dimensions &#39;Name=LoadBalancer,Value=app/sakamoto-alb/xxxxxxxxx&#39; \ --statistics &#39;Sum&#39; \ --start-time $(date -v -1H -u +&amp;quot;%Y-%m-%dT%H:%M&amp;quot;) \ --end-time $(date -u +&amp;quot;%Y-%m-%dT%H:%M&amp;quot;) \ --period 3600 --dimensions RequestCountのSumをどの軸でGro</description>
    </item>
    
    <item>
      <title>AWSでプロジェクトに存在するALBを一覧する</title>
      <link>https://dream-yt.github.io/post/list-alb-names/</link>
      <pubDate>Sun, 20 Jan 2019 14:57:42 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/list-alb-names/</guid>
      <description>aws cloudwatch list-metrics \ --namespace AWS/ApplicationELB \ --metric-name RequestCount \ | jq -r &#39;.Metrics[].Dimensions[] | select(.Name | test(&amp;quot;LoadBalancer&amp;quot;)) | .Value&#39; \ | sort \ | uniq jq の部分はjsonから必要な部分を抜き出すためのもの 配列を Name=LoadBalancer なオブジェクトにフィルタして</description>
    </item>
    
    <item>
      <title>athenaのUNIXタイムスタンプなカラムをJSTで一昨日から昨日の範囲でとる場合</title>
      <link>https://dream-yt.github.io/post/athena-before-yesterday-utc-jst/</link>
      <pubDate>Sun, 20 Jan 2019 12:25:05 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/athena-before-yesterday-utc-jst/</guid>
      <description>下記の図でJSTでの18日〜19日のデータが欲しい場合のこと 前提 日本で使いたいデータなので「日本時間での一昨日から昨日」 カラムにはunixタ</description>
    </item>
    
    <item>
      <title>PythonでTimezone Aware(Jst)なdatetimeを作る</title>
      <link>https://dream-yt.github.io/post/python-jst-timezone-aware-datetime/</link>
      <pubDate>Sat, 12 Jan 2019 23:42:03 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/python-jst-timezone-aware-datetime/</guid>
      <description>ググっても簡単なのが出てこなかったのでメモ 環境は python 3.6.7 こんな定義で引数に渡した日付時間がJSTのdatetimeになる from pytz import timezone def jst_datetime(*args): rest = [0] * (7 -</description>
    </item>
    
    <item>
      <title>hostileで/etc/hostsをテキスト管理する</title>
      <link>https://dream-yt.github.io/post/etc-hosts-hostile/</link>
      <pubDate>Mon, 07 Jan 2019 17:24:25 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/etc-hosts-hostile/</guid>
      <description>feross/hostile: Simple, programmatic /etc/hosts manipulation (in node.js) install インストールはyarnで入る (brewとかは用意されてなさそう) $ yarn global add hostile load hostile load コマンドで引数に渡した定義が/etc/hos</description>
    </item>
    
    <item>
      <title>AudioConverterNew returned -50</title>
      <link>https://dream-yt.github.io/post/macmini-audioconverternew-50/</link>
      <pubDate>Wed, 02 Jan 2019 20:13:32 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/macmini-audioconverternew-50/</guid>
      <description>2019-01-02 18:56:01.693434+0900 MyAPP[7575:859800] [AQ] 1154: AudioConverterNew returned -50 Mac miniでAVAudioRecorderを使おうと際にすると出るwarning macbookなどには音声入力があるが、Ma</description>
    </item>
    
    <item>
      <title>loguruとnotifiersを使ってslack通知をする</title>
      <link>https://dream-yt.github.io/post/loguru-notifiers/</link>
      <pubDate>Wed, 02 Jan 2019 12:55:49 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/loguru-notifiers/</guid>
      <description>前提 slackはincomming webhookをdeprecateとしている notifiersはincomming webhookにしか対応</description>
    </item>
    
    <item>
      <title>最近払い出した Slackの Incoming Webhooks で通知チャンネルを変更する</title>
      <link>https://dream-yt.github.io/post/slack-webhook-deprecated/</link>
      <pubDate>Wed, 02 Jan 2019 12:29:19 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/slack-webhook-deprecated/</guid>
      <description>残念 変更できないので調べたところ、 もうIncoming Webhooksでは通知チャンネルが変更できなくなっている Deprecated ドキュメントを見に行ったら</description>
    </item>
    
    <item>
      <title>vscodeでエラーメッセージを英語にする</title>
      <link>https://dream-yt.github.io/post/vscode-locale-change/</link>
      <pubDate>Tue, 25 Dec 2018 14:59:41 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/vscode-locale-change/</guid>
      <description>表示言語の設定は設定ファイルとは別ファイル管理になっている 以下のファイルで設定されている ~/Library/Application\ Support/Code/User/locale.json localeの値をよしなに変更すれば良い { // VS Code</description>
    </item>
    
    <item>
      <title>JavaScript heap out of memory になんとなくで対処する場合とchromeでデバッグする場合</title>
      <link>https://dream-yt.github.io/post/javascript-heap-out-of-memory/</link>
      <pubDate>Sun, 16 Dec 2018 12:05:36 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/javascript-heap-out-of-memory/</guid>
      <description>例えばwebpackの処理で以下のエラーが出た場合の話 $ serverless deploy --function App --stage prod Serverless: Bundling with Webpack... ...中略... FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory 1: node::Abort() [~/.nodebrew/node/v8.10.0/bin/node] 2: node::FatalException(v8::Isolate*, v8::Local&amp;lt;v8::Value&amp;gt;, v8::Local&amp;lt;v8::Message&amp;gt;) [~/.nodebrew/node/v8.10.0/bin/node] ...中略</description>
    </item>
    
    <item>
      <title>mongodump/mongoexportのやりかた</title>
      <link>https://dream-yt.github.io/post/mongodump-101/</link>
      <pubDate>Fri, 14 Dec 2018 13:11:58 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/mongodump-101/</guid>
      <description>mongoexport ってのでjson形式で吐き出せる (jqを使って作業がしやすい) mongoexport \ --host=aws-singapore-free-shard-00-01-xxxx.mongodb.net \ --port=27017 \ --username=app \ --authenticationDatabase=admin \ --password=xxxxxx \ --ssl \ --db=abcd \ --collection=profiles \ --out /tmp/profiles.json</description>
    </item>
    
    <item>
      <title>vscodeからdockerコンテナ内でperl -wcして文法チェック</title>
      <link>https://dream-yt.github.io/post/vscode-perl-docker-linter/</link>
      <pubDate>Wed, 12 Dec 2018 08:12:58 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/vscode-perl-docker-linter/</guid>
      <description>こちらを使うと簡単に出来た henriiik/vscode-docker-linter: Lint the things in your docker containers 設定 設定項目もこれくらいで済む &amp;quot;docker-linter.perl.enable&amp;quot;: true, &amp;quot;docker-linter.perl.machine&amp;quot;: &amp;quot;&amp;quot;, // &amp;quot;default&amp;quot;だとdocker-m</description>
    </item>
    
    <item>
      <title>cloudwatch、アラームの設定 (period, treatMissingData)</title>
      <link>https://dream-yt.github.io/post/cloudwatch-alarm-treatmissingdata/</link>
      <pubDate>Sun, 09 Dec 2018 14:07:39 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/cloudwatch-alarm-treatmissingdata/</guid>
      <description>serverless-plugin-aws-alerts を使うとアラームの設定/適用まで簡単に出来る ACloudGuru/serverless-plugin-aws-alerts: A Serverless Framework plugin that creates CloudWatch alarms for functions. 以下の設定項目はパッと見で分からなかったのでメモ period treatMissingData period メトリクスの数値を</description>
    </item>
    
    <item>
      <title>serverless deploy で生成されるリソースを事前に確認する</title>
      <link>https://dream-yt.github.io/post/sls-package-cloudformation-stack/</link>
      <pubDate>Sat, 08 Dec 2018 23:48:03 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/sls-package-cloudformation-stack/</guid>
      <description>serverlessのプラグインを使うと色々なリソースを勝手に作ってくれたりして便利だが、実行するまでプラグインのyaml設定が思い通りにな</description>
    </item>
    
    <item>
      <title>いまのブランチでいじってるファイルをいっぺんにvscodeで開く</title>
      <link>https://dream-yt.github.io/post/git-branch-diff-files-open-vscode/</link>
      <pubDate>Thu, 06 Dec 2018 14:25:18 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/git-branch-diff-files-open-vscode/</guid>
      <description>なお、ブランチはmasterから派生させている前提 コマンド全体 最初にmasterから分岐した箇所のコミットハッシュを取得している BASE=$(git show-branch --merge-base master HEAD); git</description>
    </item>
    
    <item>
      <title>環境変数にセットしてあるGoogleのJWTを使って認証する</title>
      <link>https://dream-yt.github.io/post/enviroment-value-google-jwt-credential/</link>
      <pubDate>Tue, 04 Dec 2018 10:05:39 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/enviroment-value-google-jwt-credential/</guid>
      <description>GoogleのAPIを叩く際に、GOOGLE_APPLICATION_CREDENTIALSを使ってファイルから認証情報を読み取る例は書いて</description>
    </item>
    
    <item>
      <title>サービスアカウントで認証してGoogleSpreadsheetからデータを取得</title>
      <link>https://dream-yt.github.io/post/spreadsheet-via-service-account/</link>
      <pubDate>Sat, 01 Dec 2018 16:30:16 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/spreadsheet-via-service-account/</guid>
      <description>spreadsheetのデータを取ってくるやり方をググったらいいのが見つからなかった 認証周りをガバガバでやってそう 古い認証方式(oauth</description>
    </item>
    
    <item>
      <title>commitを別の作業branchへ移動する方法</title>
      <link>https://dream-yt.github.io/post/git-cherry-pick/</link>
      <pubDate>Wed, 28 Nov 2018 22:27:25 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/git-cherry-pick/</guid>
      <description>これは一体 Gitで何度も陥ってしまう過ちにまたハマってしまう日が来ても、乗り越えられる自分でありたい。 そのための備忘録です。 状況 新しい作業の</description>
    </item>
    
    <item>
      <title>pythonの__del__</title>
      <link>https://dream-yt.github.io/post/python-__del__/</link>
      <pubDate>Mon, 26 Nov 2018 12:21:22 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/python-__del__/</guid>
      <description>軽くドキュメントを読んでメモ 次のような雰囲気のメソッドのようだ デストラクタとして使わない やむおえない時だけ使う 変な使い方はしない ドキュメント</description>
    </item>
    
    <item>
      <title>Lambdaでcallbackを呼んでるのにタイムアウト扱いになる場合</title>
      <link>https://dream-yt.github.io/post/lambda-callbackwaitsforemptyeventloop/</link>
      <pubDate>Sat, 24 Nov 2018 12:47:49 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/lambda-callbackwaitsforemptyeventloop/</guid>
      <description>lambdaはcallbackが呼ばれても、イベントループが残っていたらプロセスを待機させてしまう。使用しているライブラリがコネクションをポ</description>
    </item>
    
    <item>
      <title>macosでパイプで翻訳してくれるtransコマンドを使う</title>
      <link>https://dream-yt.github.io/post/trans-command-on-macos/</link>
      <pubDate>Fri, 23 Nov 2018 14:18:17 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/trans-command-on-macos/</guid>
      <description>soimort/translate-shell: Command-line translator using Google Translate, Bing Translator, Yandex.Translate, DeepL Translator, etc. インストール brew install gawk # 依存してるのでmacosの場合必要 sudo wget git.io/trans -O /usr/local/bin/trans sudo chmod +x /usr/local/bin/trans 使い方 $ trans --help | head -1 Usage: trans [OPTIONS] [SOURCE]:[TARGETS] [TEXT]... 例えば 日本語(j</description>
    </item>
    
    <item>
      <title>LambdaのエラーをコーディングなしでSlack通知までしてもらう設定</title>
      <link>https://dream-yt.github.io/post/codeless-lambda-error-slack-notify/</link>
      <pubDate>Fri, 23 Nov 2018 14:04:09 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/codeless-lambda-error-slack-notify/</guid>
      <description>serverlessを使っている前提 slackの bring emails into slack を使う slack通知用のメールアドレスを取得 このアドレスにメールを送ると、内容がsl</description>
    </item>
    
    <item>
      <title>的外れな言葉に傷つく前に読む雑記</title>
      <link>https://dream-yt.github.io/post/zakki-181120-dream/</link>
      <pubDate>Tue, 20 Nov 2018 23:59:56 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/zakki-181120-dream/</guid>
      <description>これは一体 文章を書く練習の一貫で、最近思ったことを書く。 箇条書きと文章を使い分けられるいいかんじの人を目指して。 雑記です。もう。 身の回りでも</description>
    </item>
    
    <item>
      <title>aws-cdkを使い始めるまでメモ</title>
      <link>https://dream-yt.github.io/post/aws-cdk-101/</link>
      <pubDate>Sat, 17 Nov 2018 22:30:32 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/aws-cdk-101/</guid>
      <description>プロジェクトを作成する app ってのはサブコマンドで、「アプリ開発者として使う」という意味 (libってのがあって、それはcdkのライブラリ作者が使</description>
    </item>
    
    <item>
      <title>年末調整で毎回調べる諸々</title>
      <link>https://dream-yt.github.io/post/salary-man-year-end-adjustment/</link>
      <pubDate>Sat, 17 Nov 2018 11:41:24 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/salary-man-year-end-adjustment/</guid>
      <description>年末調整で毎回調べる諸々 源泉徴収とは サラリーマンも税金を払う必要があるが、 それを会社が代わりに徴収してくれる制度のこと 【完全版】5分で理解で</description>
    </item>
    
    <item>
      <title>【ロゴ作成】RGBとCMYKの色マニュアルを作った時の備忘録</title>
      <link>https://dream-yt.github.io/post/logo-colormode/</link>
      <pubDate>Wed, 07 Nov 2018 12:51:45 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/logo-colormode/</guid>
      <description>状況 新ロゴができたので、RGBとCMYKで色のマニュアルを作る。 が。 RGBで作成したAiデータをCMYKに変換しただけでは、色が変わってしま</description>
    </item>
    
    <item>
      <title>athenacliを使う</title>
      <link>https://dream-yt.github.io/post/gettingstarted-athenacli/</link>
      <pubDate>Sat, 03 Nov 2018 18:11:44 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/gettingstarted-athenacli/</guid>
      <description>awscliにはathenaサブコマンドが用意されているが、gcpのbqコマンドのように便利な雰囲気ではない athena — AWS CLI 1.16.47 Command Reference シェルスクリプトに</description>
    </item>
    
    <item>
      <title>jq での変形例 (keys[]でのオブジェクト=&gt;オブジェクト編) </title>
      <link>https://dream-yt.github.io/post/jq-sample-keys-obj-children/</link>
      <pubDate>Sat, 03 Nov 2018 17:45:49 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/jq-sample-keys-obj-children/</guid>
      <description>こんなjsonがあって { &amp;quot;xxxxxx&amp;quot;: { &amp;quot;_name&amp;quot;: &amp;quot;トーマス&amp;quot;, &amp;quot;children&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;トーマス（男性向け）&amp;quot;, &amp;quot;code&amp;quot;: &amp;quot;41080&amp;quot; }, { &amp;quot;code&amp;quot;: &amp;quot;41081&amp;quot;, &amp;quot;name&amp;quot;: &amp;quo</description>
    </item>
    
    <item>
      <title>GoogleSpreadsheetのデータ(csv)をパパッとjsonにしてスクリプトから使う</title>
      <link>https://dream-yt.github.io/post/googlespreadsheet-csv-json-perl/</link>
      <pubDate>Sat, 03 Nov 2018 17:24:38 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/googlespreadsheet-csv-json-perl/</guid>
      <description>csvjsonを使うとcsv =&amp;gt; json が簡単に変換できる csvjsonはcsvkitをインストールすると入ってくる $ brew install csvkit ... $ which csvjson /usr/local/bin/csvjson csvでダウン</description>
    </item>
    
    <item>
      <title>起業の科学の読書メモ</title>
      <link>https://dream-yt.github.io/post/startup-sci/</link>
      <pubDate>Sun, 28 Oct 2018 18:14:17 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/startup-sci/</guid>
      <description>会社でみんなで読もうみたいな機運だったのでちゃんと読みました 市場分析フレームワークの図鑑みたいな内容 前半部分、起業以前のところは一般常識とし</description>
    </item>
    
    <item>
      <title>BigQueryの日付分割テーブルを使う</title>
      <link>https://dream-yt.github.io/post/bq-time_partitioning_field/</link>
      <pubDate>Sun, 28 Oct 2018 02:24:40 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/bq-time_partitioning_field/</guid>
      <description>bigqueryで探索するディスク領域を節約する方法は過去たくさんあった _YYYYMMDD suffix pattern using the _PARTITIONTIME pseudo-column これはまだ今でも現役なところが多そう TIMESTAMP</description>
    </item>
    
    <item>
      <title>dockerコンテナ内でstraceを使う</title>
      <link>https://dream-yt.github.io/post/strace-in-docker-container/</link>
      <pubDate>Wed, 24 Oct 2018 23:36:47 +0900</pubDate>
      
      <guid>https://dream-yt.github.io/post/strace-in-docker-container/</guid>
      <description>docker runに起動オブションをつけないとstraceは実行できない これはセキュリティの見地からdocker内では呼んで良いシステムコールが制限さ</description>
    </item>
    
    <item>
      <title></title>
      <link>https://dream-yt.github.io/post/bigquery-bq-maximum_bytes_billed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dream-yt.github.io/post/bigquery-bq-maximum_bytes_billed/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>